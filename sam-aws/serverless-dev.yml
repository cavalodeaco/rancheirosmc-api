# Serverless Infrastucture to PPV APIs
# Doc: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Configure a Development Serverless Infrastructure in AWS

Parameters:
  StageName:
    Type: String
    Description: API Stage name
    Default: dev
  DevCognitoUserPoolName:
    Type: String
    Description: User pool name
    Default: dev
  ClientDevCognitoUserPoolName:
    Type: String
    Description: Client user pool name
    Default: client_dev

# Doc: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # LogicalID
  ApiGatewayDevApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ppv-api-${StageName}
      Description: "Define a API Gateway to Development env"
      StageName: !Ref StageName
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        MaxAge: "'5'"
        AllowCredentials: false
      Auth:
        DefaultAuthorizer: DevCognitoAuthorizer
        Authorizers:
          DevCognitoAuthorizer:
            UserPoolArn: !GetAtt DevCognitoUserPool.Arn

  HelloDevLambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.7
      Handler: index.handler
      InlineCode: |
        def handler(event, context):
            return {'body': 'I am here!', 'statusCode': 200}
      Events:
        HelloDevEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayDevApi
            Path: /status
            Method: GET

  DataDevDynamoDb:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub ppv-table-${StageName}
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  ServerlessDevLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./node-js
      Handler: ./src/serverless.handler
      MemorySize: 1024
      Runtime: nodejs16.x
      Timeout: 30
      Events:
        ServerProxyDevEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayDevApi
            Path: /{proxy+}
            Method: ANY
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DataDevDynamoDb
      Environment:
        Variables:
          TABLE_NAME: !Sub ppv-table-${StageName}

  DevCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref DevCognitoUserPoolName
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true

  ClientDevCognitoUserPool:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref DevCognitoUserPool
      ClientName: !Ref ClientDevCognitoUserPoolName
      GenerateSecret: false

Outputs:
  ApiUrl:
    Description:
      Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Sub https://${ApiGatewayDevApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/
  UserPoolClient:
    Description:
      User pool Cognito client.
    Value: !Ref ClientUserPoolDevCognito
