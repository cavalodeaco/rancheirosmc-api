# Serverless Infrastucture to PPV APIs
# Doc: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Configure a Production Serverless Infrastructure in AWS

Parameters:
  StageName:
    Type: String
    Description: API Stage name
    Default: prod
  ProdCognitoUserPoolName:
    Type: String
    Description: User pool name
    Default: prod
  ClientProdCognitoUserPoolName:
    Type: String
    Description: Client user pool name
    Default: client_prod

# Doc: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # LogicalID
  ApiGatewayProdApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ppv-api-${StageName}
      Description: "Define a API Gateway to Production env"
      StageName: !Ref StageName
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
        MaxAge: "'5'"
        AllowCredentials: false
      # Auth:
      #   DefaultAuthorizer: ProdCognitoAuthorizer
      #   Authorizers:
      #     ProdCognitoAuthorizer:
      #       UserPoolArn: !GetAtt ProdCognitoUserPool.Arn

  HelloProdLambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.7
      Handler: index.handler
      InlineCode: |
        def handler(event, context):
            return {'body': 'I am here!', 'statusCode': 200}
      Events:
        HelloProdEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayProdApi
            Path: /status
            Method: GET

  DataProdDynamoDb:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ppv-table-${StageName} 
      AttributeDefinitions: 
        - 
          AttributeName: "PK"
          AttributeType: "S"
        - 
          AttributeName: "SK"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "PK"
          KeyType: "HASH"
        - 
          AttributeName: "SK"
          KeyType: "RANGE"
      ProvisionedThroughput: 
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"

  ServerlessProdLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./node-js
      Handler: ./src/serverless.handler
      MemorySize: 1024
      Runtime: nodejs16.x
      Timeout: 30
      Events:
        ServerProxyProdEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayProdApi
            Path: /{proxy+}
            Method: ANY
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DataProdDynamoDb
      Environment:
        Variables:
          TABLE_NAME: !Sub ppv-table-${StageName}
          CLIENT_ID: !Ref ClientProdCognitoUserPool
          USER_POOL_ID: !Ref ProdCognitoUserPool

  ProdCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref ProdCognitoUserPoolName
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true

  ClientProdCognitoUserPool:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref ProdCognitoUserPool
      ClientName: !Ref ClientProdCognitoUserPoolName
      GenerateSecret: false

Outputs:
  ApiUrl:
    Description:
      Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Sub https://${ApiGatewayProdApi}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/
